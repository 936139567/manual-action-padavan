name: Padavan固件编译

on:
  workflow_dispatch:
    inputs:
      production:
        description: 设置编译固件的型号，用空格符分隔：
        default: "PSG1218"
        required: false
      cloneurl:
        description: 设置源码链接地址，注意后加.git：
        default: "https://github.com/hanwckf/rt-n56u.git"
        required: false  
      release:
        description: 是否需要发布到Release？(不发布也可以到Artifacts下载)
        default: 'yes'
        required: false
        
env: 
  TNAME: "${{ github.event.inputs.production }}"    # 路由型号
  BASE_PATH: padavan    # 基础目录
  PUBLIC_PATH: public    # 公共目录
  VERSION_FILE: versions.inc    # 版本后缀
  PUBLIC_SH: public.sh    # 公共命令
  UPLOAD_FIRMWARE: true    # 是否打包文件
  CLONE_BRANCH: master    # padavan 分支
  WORK_PATH: /opt/rt-n56u    # 工作目录 一定要加 /

jobs:
  padavan:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id     # 监视所有者点击start
    steps:    
    - name: 生成版本号
      run: |
        whoami
        id
        echo 接收到的输入参数:
        echo "${{ github.event.inputs.production }}"
        echo "${{ github.event.inputs.cloneurl }}"
        echo "${{ github.event.inputs.release }}"
        echo 当前目录:$(pwd)
        VERSION=$(TZ='Asia/Shanghai' date +%Y.%m.%d-%H%M)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "DIR=/opt/rt-n56u" >> $GITHUB_ENV
        val1="${{ github.event.inputs.production }}"
        val2=$(echo $val1 | sed 's/ /-/')
        echo "NAME=$VERSION+${val2}" >> $GITHUB_ENV
        echo "TAG=v$VERSION+${val2}" >> $GITHUB_ENV
        ip addr
        pwd
